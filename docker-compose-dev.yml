services:
  # servicio api Spring Boot
  spring-boot-api:
    build: ./calesapp-backend/spring-boot-api
    container_name: calesapp-backend
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/calesappdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 12345678
      SPRING_PROFILES_ACTIVE: dev
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
    ports:
      - "8081:8080"
    networks:
      - calesapp-network-dev

  angular-app:
    build:
      context: ./calesapp-frontend
      dockerfile: Dockerfile
    container_name: calesapp-frontend
    ports:
      - "80:80"
    restart: always
    volumes:
      - ./angular-app/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - spring-boot-api
    networks:
      - calesapp-network-dev

  # servicio PostgreSQL
  db:
    image: postgres:16-alpine
    container_name: calesapp-db-dev
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345678
      - POSTGRES_DB=calesappdb
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - pgdata-dev:/var/lib/postgresql/data
    networks:
      - calesapp-network-dev
    restart: on-failure
    ports:
      - "5433:5432"

  # servicio pgAdmin
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin-dev
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: 1
    depends_on:
      db:
        condition: service_started
    volumes:
      - pgadmin-data-dev:/var/lib/pgadmin
    networks:
      - calesapp-network-dev

networks:
  calesapp-network-dev:
    driver: bridge

volumes:
  pgdata-dev:
  pgadmin-data-dev:
